generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "metrics", "tracing", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id           String   @id @default(uuid())
  // email        String   @unique
  nim          String   @unique
  passwordHash String
  role         UserRole @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile Profile?

  TA   TA[]
  like Like[]
}

model Profile {
  id      String  @id @default(uuid())
  name    String
  faculty String? @db.VarChar(50)
  major   String? @db.VarChar(50)
  campus  String?
  user    User    @relation(fields: [userId], references: [id])
  userId  String  @unique

  updatedAt DateTime @default(now()) @updatedAt
}

model TA {
  id          String @id @default(uuid())
  title       String
  description String
  wisudawan   User   @relation(fields: [wisudawanId], references: [id])
  wisudawanId String
  likes       Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id     String @id @default(uuid())
  TA     TA     @relation(fields: [taId], references: [id])
  taId   String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
}

model WOA {
  id     String @id @default(uuid())
  to     String 
  content String

  createdAt DateTime @default(now())
}
